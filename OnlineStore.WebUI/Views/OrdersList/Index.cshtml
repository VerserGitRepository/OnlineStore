@using System.Linq;
@model OnlineStore.WebUI.Models.OrderViewModel
@{
    ViewBag.Title = "MANAGEORDERS";
}
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>jQuery UI Tabs - Default functionality</title>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.6/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.3/js/bootstrap.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="https://cdn.datatables.net/1.10.15/js/jquery.dataTables.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.js"></script>
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <link href="https://cdn.datatables.net/1.10.20/css/jquery.dataTables.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.css">
    <link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.2/themes/smoothness/jquery-ui.css" />
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.3/css/bootstrap.min.css" integrity="sha384-Zug+QiDoJOrZ5t4lssLdxGhVrurbmBWopoEl+M6BdEfwnCJZtKxi1KgxUyJq13dy" crossorigin="anonymous">

</head>
<body>

    <div id="tabs" style=" text-align:center">

        <ul>
            @*<li><a href="#tabs-1">ONLINE-STORE ORDERS</a></li>*@
            <li><a href="#tabs-2">ORDERS</a></li>
            <li><a href="#tabs-3">CREATE MANUAL ORDER</a></li>
            <li><a href="#tabs-4">PRODUCTS LIST</a></li>
            <li><a href="#tabs-7">AUCTION ASSET BUNDLES</a></li>
            <li><a href="#tabs-5">SHIPPED ORDERS</a></li>
            <li><a href="#tabs-6">MANAGE</a></li>
        </ul>


        <div class="panel-body" >

            <div id="tabs-2">

                <table class="table table-bordered table-hover" id="OrdersTable1">
                    <thead style="background-color:#959ca1;color:white;">
                        <tr>
                            <th>Orderno</th>
                            <th>SKU</th>
                            <th>Customer</th>
                            <th>Suburb</th>
                            <th>Postcode</th>
                            <th>Address</th>
                            <th>State</th>
                            <th>ContactNo</th>
                            <th>Email</th>
                            <th>SalesOrder</th>
                            <th>Status</th>
                            <th>OrderRef</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.OnlineSaleOrdersList)
                        {
                            <tr class="submitOrder">
                                <td>
                                    <a href="javascript:void(0);" class="btn btn-secondary OrderDesc" data-id="@item.Id">@Html.DisplayFor(modelItem => item.Id)</a>
                                    <input class="hiddenVal" type="hidden" id="hiddenDesc" value="@item.OnlineSalePurchasedProductsDesc" />
                                </td>
                                <td></td>
                                <td>@item.FirstName &nbsp; @item.LastName</td>
                                <td>@item.Suburb</td>
                                <td>@item.Postcode</td>
                                <td>@item.AddressLine1 </td>
                                <td>@item.State</td>
                                <td>@item.ContactNumber</td>
                                <td>@item.Email</td>
                                <td>@item.JobNo</td>
                                <td>@item.OrderStatus</td>
                                <td>@item.OrderRef</td>
                                <td>
                                    <input type="submit" class="btn btn-outline-success" value="SHIP ORDER" id="SubmitOrder" onclick="SubmitOrder(this);" />
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div id="tabs-3" class="table-bordered">
                @using (Html.BeginForm("ProcessManualOrder", "OrdersList", FormMethod.Post))
                {
                    <div class="row well" style="margin-bottom:10px">
                        <div class="col-md-2 offset-4" style="text-align:start">
                            <label class="control-label">Surname</label>
                            @Html.EditorFor(model => model.ManualOrdersViewModel.Salutation, "", new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => Model.ManualOrdersViewModel.Salutation, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2" style="text-align:start">
                            <label class="control-label">First Name</label>
                            @Html.EditorFor(model => model.ManualOrdersViewModel.FirstName, "", new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => Model.ManualOrdersViewModel.FirstName, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-2 offset-4" style="text-align:start">
                            <label class="control-label">Last Name</label>
                            @Html.EditorFor(model => model.ManualOrdersViewModel.LastName, "", new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => Model.ManualOrdersViewModel.LastName, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2" style="text-align:start">
                            <label class="control-label">Contact Number</label>
                            @Html.EditorFor(model => model.ManualOrdersViewModel.ContactNumber, "", new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => Model.ManualOrdersViewModel.ContactNumber, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-2 offset-4" style="text-align:start">
                            <label class="control-label">Email</label><br />
                            @Html.EditorFor(model => model.ManualOrdersViewModel.Email, "", new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => Model.ManualOrdersViewModel.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row well" style="margin-bottom:10px">
                        <div class="col-md-2 offset-4" style="text-align:start">
                            <label class="control-label">AddressLine1</label>
                            @Html.EditorFor(model => model.ManualOrdersViewModel.AddressLine1, "", new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => Model.ManualOrdersViewModel.AddressLine1, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2" style="text-align:start">
                            <label class="control-label">AddressLine2</label>
                            @Html.EditorFor(model => model.ManualOrdersViewModel.AddressLine2, "", new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => Model.ManualOrdersViewModel.AddressLine2, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-2 offset-4" style="text-align:start">
                            <label class="control-label">Locality</label>
                            @Html.EditorFor(model => model.ManualOrdersViewModel.Locality, "", new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => Model.ManualOrdersViewModel.Locality, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-2" style="text-align:start">
                            <label class="control-label">Postcode</label>
                            @Html.EditorFor(model => model.ManualOrdersViewModel.Postcode, "", new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => Model.ManualOrdersViewModel.Postcode, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-2 offset-4" style="text-align:start">
                            <label class="control-label">State</label>
                            @Html.DropDownList("State", new List<SelectListItem>
                            {

                                new SelectListItem{ Text="NSW", Value = "NSW" },
                                new SelectListItem{ Text="QLD", Value = "QLD" },
                                new SelectListItem{ Text="SA", Value = "SA" },
                                new SelectListItem{ Text="TAS", Value = "TAS" },
                                new SelectListItem{ Text="VIC", Value = "VIC" },
                                new SelectListItem{ Text="WA", Value = "WA" },
                                new SelectListItem{ Text="ACT", Value = "ACT" },
                                new SelectListItem{ Text="NT", Value = "NT" } },
                            new { @class = "form-control", style = "Height:35px" })

                        </div>
                    </div>

                    <div class="row well" style="margin-bottom:10px">
                        <div class="col-md-2 offset-4" style="text-align:start">
                            <label class="control-label">SSN</label>
                            @Html.EditorFor(model => model.ManualOrdersViewModel.SSN, "", new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => Model.ManualOrdersViewModel.SSN, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2" style="text-align:start">
                            <label class="control-label">No Of Items</label>
                            @Html.DropDownListFor(m => m.ManualOrdersViewModel.NoOfItems, Enumerable.Range(1, 100).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), new { @class = "form-control" })
                        </div>

                        <div class="col-md-1 offset-4" style="text-align:start">
                            <label class="control-label">Height</label>
                            @Html.DropDownListFor(m => m.ManualOrdersViewModel.Height, Enumerable.Range(1, 100).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), new { @class = "form-control" })
                        </div>
                        <div class="col-md-1" style="text-align:start">
                            <label class="control-label">Weight</label>
                            @Html.DropDownListFor(m => m.ManualOrdersViewModel.Weight, Enumerable.Range(1, 100).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), new { @class = "form-control" })
                        </div>
                        <div class="col-md-1" style="text-align:start">
                            <label class="control-label">Width</label>

                            @Html.DropDownListFor(m => m.ManualOrdersViewModel.Width, Enumerable.Range(1, 100).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), new { @class = "form-control" })
                        </div>
                        <div class="col-md-1" style="text-align:start">
                            <label class="control-label">Length</label>
                            @Html.DropDownListFor(m => m.ManualOrdersViewModel.Length, Enumerable.Range(1, 100).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), new { @class = "form-control" })
                        </div>

                        <div class="col-md-2 offset-4" style="text-align:start">
                            <label class="control-label">AmazonOrderNo</label>
                            @Html.EditorFor(model => model.ManualOrdersViewModel.AmazonOrderNo, "", new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => Model.ManualOrdersViewModel.AmazonOrderNo, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2" style="text-align:start">
                            <label class="control-label">SKU</label>
                            @Html.EditorFor(model => model.ManualOrdersViewModel.SKU, "", new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => Model.ManualOrdersViewModel.SKU, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-2 offset-4" style="text-align:start">
                            <label class="control-label">Ref No&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>
                            @Html.EditorFor(model => model.ManualOrdersViewModel.RefNo, "", new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => Model.ManualOrdersViewModel.RefNo, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2" style="text-align:start">
                            <label class="control-label">Project</label>
                            @Html.DropDownListFor(model => model.ManualOrdersViewModel.ProjectId, Model.ManualOrdersViewModel.CustomerProject, "Projects", new { @class = "form-control ItemType", @id = "ddlProjects", style = "Height:40px" })
                            @Html.ValidationMessageFor(model => Model.ManualOrdersViewModel.CustomerProject, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-sm-2 offset-4" style="padding-top:15px; text-align:start">
                            <button type="submit" class="btn btn-success" style="padding:10px">COMPLETE MANUAL ORDER</button>
                        </div>
                    </div>

                        }
                    </div>

            <div id="tabs-4">
                <div class="row pull-right">
                    <div class="col-md-1">
                        <div class="col-md-1" style="margin-bottom:5px">
                            <button type="submit" class="btn btn-warning btn-lg" id="addProduct" data-toggle="tooltip" data-placement="left">
                                <span class="glyphicon glyphicon-plus"></span>
                            </button>
                        </div>
                    </div>
                </div>
                <table class="table table-bordered table-hover" table-responsive table-hover" width="250%" id="ProductsTable" style="font-size:smaller">
                    <thead style="background-color:#959ca1;color:white">
                        <tr>
                            <th>ID</th>
                            <th>Image</th>
                            <th>Product</th>
                            <th>ItemType</th>
                            <th>Brand</th>
                            <th>Model</th>
                            <th>PriceExGST</th>
                            <th>GSTAmount</th>
                            <th>PriceIncGST</th>
                            <th>Quantity</th>
                            <th>PromoCode</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.OnlineSaleProductList)
                        {
                            <tr>
                                <td>@item.Id</td>
                                <td>

                                    @*@if (item.ProductImage.Length > 0)
                            {
                                <img src="data:image;base64,@System.Convert.ToBase64String(item.ProductImage)" alt="@item.ProductName" width="200" height="150"/>
                            }*@

                                    @if (item.Images.Count > 0)
                                    {
                                        <img src="~/ProductImages/@item.Images.FirstOrDefault()" width="90" height="60" />
                                    }
                                </td>
                                <td><a href="javascript:void(0);" class="ProductName" data-id="@item.Id" style="font-weight:600;color:dodgerblue">@Html.DisplayFor(modelItem => item.ProductName) </a></td>
                                <td>@item.Brand_ID</td>
                                <td>@item.ItemType_ID</td>
                                <td>@item.Model_ID</td>
                                <td>@item.PriceExGST</td>
                                <td>@item.GSTAmount</td>
                                <td>@item.PriceIncGST</td>
                                <td>@item.QtyAvailable</td>
                                <td>
                                    <a class="Update btn btn-success a-btn-slide-text" href="javascript:;" id="AddPromo">

                                        <span><strong>Add Promo Code</strong></span>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div id="tabs-5">
                <table class="table table-bordered table-hover" id="OrdersTable1" style="font-size:smaller">
                    <thead style="background-color:#959ca1;color:white">
                        <tr>
                            @*<th>Orderno</th>*@
                            <th>BrandName </th>
                            <th>Description </th>
                            <th>GSTAmount</th>
                            <th>ItemTypeName </th>
                            <th>ModelName </th>
                            <th>PriceExGST</th>
                            <th>ProductName</th>

                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.OnlineSalePurchasedProducts)
                        {
                            <tr>
                                <td>@item.BrandName</td>
                                <td>@item.Description</td>
                                <td>@item.GSTAmount</td>
                                <td>@item.ItemTypeName</td>
                                <td>@item.ModelName</td>
                                <td>@item.PriceExGST </td>
                                <td>@item.ProductName</td>

                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div id="tabs-6">
                MANAGEDISPATCHORDER
            </div>

            <div id="tabs-7">
                <div class="row pull-right">
                    <div class="col-md-1">
                        <div class="col-md-1" style="margin-bottom:5px">
                            <button type="submit" class="btn btn-warning btn-lg" onclick="OpenAuctionAssetBundle();">
                                <span class="glyphicon glyphicon-plus"></span>
                            </button>
                        </div>
                    </div>
                </div>
                <table class="table table-bordered table-hover" id="OrdersTable1">
                    <caption>AUCTION ASSET BUNDLES</caption>
                    <thead style="background-color:#959ca1 !important;color:white">
                    <thead>
                        <tr>
                            <th scope="col">#</th>
                            <th scope="col">Bundle Title</th>
                            <th scope="col">Start Date&TIme</th>
                            <th scope="col">End Date&TIme</th>
                            <th scope="col">BundlePrice</th>
                            <th scope="col">IsAuctionActive</th>
                            <th scope="col"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.AuctionBundleList)
                        {
                            <tr>
                                <td scope="row">@item.Id</td>
                                <td><a href="javascript:void(0);" class="EditBundleDetails" data-id="@item.Id" style="font-weight:600;color:dodgerblue">@Html.DisplayFor(modelItem => item.BundleTitle) </a></td>
                                <td>@item.BundleTitle</td>
                                <td>@item.Bundle_Auction_StartDate</td>
                                <td>@item.Bundle_Auction_EndDate</td>
                                <td>@item.BundleBaseprice</td>
                                <td>@item.IsAuctionBundleActive</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

        </div>
    </div>
</body>
<script>


        $(function () {
            $("#tabs").tabs();
        });
        $(document).ready(function () {
            $('#ProductsTable').DataTable();
            $('#OrdersTable').DataTable();
             $('#OrdersTable1').DataTable();
            $('.dataTables_filter').addClass('pull-right');
            $('[data-toggle="popover"]').popover({
                container: 'body'
            });
            $('.date-picker').datepicker();
        });
        $('#addProduct').click(function () {
            debugger;
            var AddSiteURL = '@Url.Action("AddProduct", "OrdersList")'
            $.ajax({
            type: "GET",
            url: AddSiteURL,
            success: function (data) {

            $.confirm({
            boxWidth: '40%',
            useBootstrap: false,
            backgroundDismiss: true,

            title: '',
            content: data,
            closeIcon: true,
            buttons: {
            yes: { isHidden: true }
            },
            });
                },
                error: function (result) { alert(result); console.log(result);}
            });
        });

    function OpenAuctionAssetBundle() {
            debugger;
            var AddSiteURL = '@Url.Action("_AddNewBundle", "OrdersList")'
            $.ajax({
            type: "GET",
            url: AddSiteURL,
            success: function (data) {

            $.confirm({
            boxWidth: '40%',
            useBootstrap: false,
            backgroundDismiss: true,

            title: '',
            content: data,
            closeIcon: true,
            buttons: {
            yes: { isHidden: true }
            },
            });
                },
                error: function (result) { alert(result); console.log(result);}
            });
        }
    $('.Update').click(function () {
            debugger;
            var AddSiteURL = '@Url.Action("AddPromo", "OrdersList")'
            $.ajax({
            type: "GET",
            url: AddSiteURL,
            success: function (data) {

            $.confirm({
            boxWidth: '40%',
            useBootstrap: false,
            backgroundDismiss: true,

            title: '',
            content: data,
            closeIcon: true,
            buttons: {
            yes: { isHidden: true }
            },
            });
                },
                error: function (result) { alert(result); console.log(result);}
            });
        });
    function SubmitOrder(row) {

           debugger;
        var buttonClicked = $(row).closest("tr");
           var theId = buttonClicked.find(".OrderDesc").text();

            var AddSiteURL = '@Url.Action("ProductList", "OrdersList")'
            $.ajax({
            type: "GET",
            data: { "id": theId },
            url: AddSiteURL,
            success: function (data) {

            $.confirm({
            boxWidth: '40%',
            useBootstrap: false,


            title: 'ProductList',
            content: data,
            closeIcon: true,
            buttons: {
            yes: { isHidden: true }
            },
            });
                },
                error: function (result) { alert(result); console.log(result);}
            });
        }
    $("#OrdersTable1").on("click", ".OrderDesc", function () {
        // debugger;
        var buttonClicked = $(this);
        var CandidateName = buttonClicked.attr('data-id');
        var options = { "backdrop": "static", keyboard: true };
        var row = $(buttonClicked).closest("tr");
        var desc = row.find(".hiddenVal").val();
        // debugger;
        $.confirm({
            boxWidth: '90%',
            backgroundDismiss: true,

            useBootstrap: false,
            title: '',
            content: desc.split('-'),
            closeIcon: true,
            buttons: {
                yes: { isHidden: true }
            },
        });

    });
    $('#myModal').on('hidden.bs.modal', function (e) {
        location.reload();
    })
    $(function () {
        $("#ProductsTable").on("click", ".ProductName", function () {
               debugger;
            var $buttonClicked = $(this);
            var ProjectName = $buttonClicked.attr('data-id');
            var AddSiteURL = '@Url.Action("UpdateProduct", "OrdersList")'
            $.ajax({
                type: "GET",
                url: AddSiteURL,
                data: { "productId": ProjectName},
            success: function (data) {

            $.confirm({
            boxWidth: '90%',
            backgroundDismiss: true,

            useBootstrap: false,
            title: '',
            content: data,
            closeIcon: true,
            buttons: {
            yes: { isHidden: true }
            },
            });
                },
                error: function (result) { alert(result); console.log(result);}
            });
        });
    });

    $(function () {
        $("#AssetAuctionTable").on("click", ".EditBundleDetails", function () {
            debugger;
            var $buttonClicked = $(this);
            var bundleId = $buttonClicked.attr('data-id');
            var AddSiteURL = '@Url.Action("_UpdateBundle", "OrdersList")'
            $.ajax({
            type: "GET",
                url: AddSiteURL,
                data: { "bundleId": bundleId },
            success: function (data) {

            $.confirm({
            boxWidth: '90%',
            useBootstrap: false,
            backgroundDismiss: true,

            title: '',
            content: data,
            closeIcon: true,
            buttons: {
            yes: { isHidden: true }
            },
            });
                },
                error: function (result) { alert(result); console.log(result);}
            });
        });
        });

</script>
<style>
    .popover-content {
        white-space: pre-line;
    }

    .table tr th {
        background-color: darkgray;
    }
</style>